name: Release Pipeline

on:
  push:
    branches:
      - main

jobs:
  # 1️⃣ Job: Build do projeto com Gradle
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configurar JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin

      - name: Permitir execução do Gradle
        run: chmod +x gradlew

      - name: Compilar com Gradle
        run: ./gradlew build

  # 2️⃣ Job: Release com semantic-release e captura da tag
  release:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Instalar dependências
        run: npm ci

      - name: Rodar semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Capturar a nova tag criada
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "no-tag")
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Exibir tag gerada
        run: | 
          echo "Tag gerada: ${{ steps.get_tag.outputs.tag }}"

  # 3️⃣ Job: Docker build/push com a tag criada
  docker:
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.tag != 'no-tag'

    steps:
      - name: Exibir tag recebida
        run: | 
          echo "Tag recebida do release: ${{ needs.release.outputs.tag }}"

      - name: Simular docker build
        run: |
          echo "🔧 docker build -t oseiasoliveira/tissbuilder-api:${{ needs.release.outputs.tag }} ."

      - name: Simular docker push
        run: |
          echo "🚀 docker push oseiasoliveira/tissbuilder-api:${{ needs.release.outputs.tag }}"
