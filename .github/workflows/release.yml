on:
  push:
    branches:
      - main

jobs:
  # 1️⃣ Job: Build do projeto com Gradle
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configurar JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin

      - name: Permitir execução do Gradle
        run: chmod +x gradlew

      - name: Compilar com Gradle
        run: ./gradlew build

    release:
      needs: build
      runs-on: ubuntu-latest
      outputs:
        tag: ${{ steps.release_check.outputs.tag }}
        released: ${{ steps.release_check.outputs.released }}

      steps:
        - name: Checkout do código
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Configurar Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '20'

        - name: Instalar dependências
          run: npm ci

        - name: Capturar tag antes do semantic-release
          id: pre_release_tag
          run: |
            echo "tag_pre=$(git describe --tags --abbrev=0 || echo '')" >> $GITHUB_OUTPUT

        - name: Rodar semantic-release
          run: npx semantic-release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Capturar tag depois do semantic-release
          id: post_release_tag
          run: |
            echo "tag_post=$(git describe --tags --abbrev=0 || echo '')" >> $GITHUB_OUTPUT

        - name: Comparar tags e definir se houve release
          id: release_check
          run: |
            if [ "${{ steps.pre_release_tag.outputs.tag_pre }}" != "${{ steps.post_release_tag.outputs.tag_post }}" ]; then
              echo "released=true" >> $GITHUB_OUTPUT
              echo "tag=${{ steps.post_release_tag.outputs.tag_post }}" >> $GITHUB_OUTPUT
            else
              echo "released=false" >> $GITHUB_OUTPUT
              echo "tag=" >> $GITHUB_OUTPUT
            fi

        - name: Exibir resultado
          run: |
            echo "Tag antiga: ${{ steps.pre_release_tag.outputs.tag_pre }}"
            echo "Tag nova: ${{ steps.post_release_tag.outputs.tag_post }}"
            echo "Release gerada: ${{ steps.release_check.outputs.released }}"

  # 3️⃣ Job: Docker build/push com a tag criada
  docker:
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.released == 'true'

    steps:
      - name: Exibir tag recebida
        run: | 
          echo "Tag recebida do release: ${{ needs.release.outputs.tag }}"

      - name: Simular docker build
        run: |
          echo "🔧 docker build -t oseiasoliveira/tissbuilder-api:${{ needs.release.outputs.tag }} ."

      - name: Simular docker push
        run: |
          echo "🚀 docker push oseiasoliveira/tissbuilder-api:${{ needs.release.outputs.tag }}"